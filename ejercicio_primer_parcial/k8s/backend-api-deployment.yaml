apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-api
  namespace: ecommerce-app
spec:
  replicas: 4
  selector:
    matchLabels:
      app: backend-api
  template:
    metadata:
      labels:
        app: backend-api
    spec:
      containers:
        - name: backend-api
          image: backend-api:v1 # Local image, no registry used
          imagePullPolicy: Never # Ensures Kubernetes doesn't attempt to pull from a registry
          ports:
            - containerPort: 3001
          env:
            # DB Config from ConfigMap
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: api-config
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: api-config
                  key: DB_PORT
            # DB Credentials from Secret
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: DB_PASSWORD
            # DB Name from PostgreSQL ConfigMap
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: DB_NAME
          resources:
            requests:
              cpu: "50m"
              memory: "128Mi"
            limits:
              cpu: "200m"
              memory: "256Mi"
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: 3001
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 3001
            initialDelaySeconds: 15
            periodSeconds: 10
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: backend-api
